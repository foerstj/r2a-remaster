/*
  ============================================================================
  ----------------------------------------------------------------------------

	File		: 	job_talk_xp_kiira.skrit

	Author(s)	: 	The Nord (Serious damage done...)

	Purpose		: 	Potion Lady Kiira (region 1) talk skrit

	(C)opyright 2004 Mad Doc Software, LLC/Gas Powered Games, Inc.

  ----------------------------------------------------------------------------
  ============================================================================
*/

Go		m_Go$;
GoMind	m_Mind$;
GoBody  m_Body$;
Job		m_Job$;
Goid	m_Target$;

// combat magic award
property scid	combatmScid$;
property scid	naturemScid$;
property scid	meleeScid$;
property scid	rangedScid$;

#include "k_job_c_mcp_fidget_utils"
#include "k_job_c_talk_utils"

startup state STARTUP$
{
}

////////////////////////////////////////////////////////////////////////////////
//	init

event OnJobInitPointers$( Job job$ )
{
	m_Job$		= job$;
	m_Go$		= job$.Go;
	m_Mind$		= job$.Go.Mind;
	m_Body$		= job$.Go.Body;
	
	combatmScid$ = MakeScid(0x00100133);
	naturemScid$ = MakeScid(0x00100228);
	meleeScid$ = MakeScid(0x00100205);
	rangedScid$ = MakeScid(0x0010022C);
}


event OnJobInit$( Job job$ )
{
	OnJobInitPointers$( job$ );

	m_Target$	= job$.GoalObject;

	SetState Talk$;  
}


////////////////////////////////////////////////////////////////////////////////
//	face the audience
state Face$
{
	transition
	{
		-> Talk$:	OnWorldMessage( WE_MCP_FACING_LOCKEDON );
	}

	event OnEnterState$
	{		
		if( !m_Go$.HasConversation )
		{
			report.errorf( "Actor '%s', scid:0x%08x was told to run job_talk but he doesn't have a conversation component.",
							m_Go$.GetTemplateName,
							m_Go$.Goid );
			SetState Exiting$;
		}
		MCPManager.MakeRequest( m_Go$.Goid, PL_FACE, m_Target$ );	
	}
}


////////////////////////////////////////////////////////////////////////////////
//	blab blab away... pretend you're Ray
state Talk$
{
	transition
	{
		-> Exiting$:	OnWorldMessage( WE_REQ_TALK_END ) =
		{
			if( GameAuditor.GetDb.GetBool( "show_xp_awards" ) )
			{
				// set the bool to false, so that this won't happen again
				GameAuditor.GetDb.SetBool( "show_xp_awards", false );
				// send we_req_activate messages to the xp awards, so that they become visible
			  	SendWorldMessage( WE_REQ_ACTIVATE, m_Go$.Goid, combatmScid$);	// combat magic award
			  	SendWorldMessage( WE_REQ_ACTIVATE, m_Go$.Goid, rangedScid$ );	// ranged award
			  	SendWorldMessage( WE_REQ_ACTIVATE, m_Go$.Goid, naturemScid$ );	// nature magic award
			  	SendWorldMessage( WE_REQ_ACTIVATE, m_Go$.Goid, meleeScid$ );	// melee award
				// play effects on all of the awards
				//
				// @TODO - play an effect on kiira?
			//	Siegefx.SRunScript("transmute", m_Go$.Goid, combatmScid$.goid, "", combatmScid$.goid, WE_REQ_ACTIVATE);
	
				Siegefx.SRunScript("zorkons_disintegrator", rangedScid$.Goid, m_Go$.Goid, "", m_Go$.Goid, WE_REQ_ACTIVATE);
				Siegefx.SRunScript("zorkons_disintegrator", combatmScid$.Goid, m_Go$.goid, "", m_Go$.goid, WE_REQ_ACTIVATE);
				Siegefx.SRunScript("zorkons_disintegrator", naturemScid$.Goid, m_Go$.goid, "", m_Go$.goid, WE_REQ_ACTIVATE);
				Siegefx.SRunScript("zorkons_disintegrator", meleeScid$.Goid, m_Go$.goid, "", m_Go$.goid, WE_REQ_ACTIVATE);
			}
			
			if( m_Go$.Mind.ActorAutoFidgets )
			{
				StartFidgetIfRequired$();
			}
		}
	}
	
	trigger OnWorldMessage$( WE_ANIM_DONE )
	{
		TryAnim$('talk');
	}

	event OnEnterState$
	{
		// player has not yet talked to rowan
		if( Victory.GetQuestOrder( "xp_king", m_Target$) == 0 )
		{
			m_Go$.GetConversation.RSSelectConversation("kiira_0");
			TryAnim$('talk');
		}
		// player has not yet chosen a scroll
		else if( Victory.GetQuestOrder( "xp_king", m_Target$ ) == 1 )
		{	
			// bool to true causes xp awards to be made visible
			GameAuditor.GetDb.SetBool( "show_xp_awards", true );
			
			m_Go$.GetConversation.RSSelectConversation("kiira_1");
			TryAnim$('talk');	
		}
		// yay. they have won.
		else if( Victory.IsQuestCompleted("xp_king", m_Target$ ) )
		{
			m_Go$.GetConversation.RSSelectConversation("kiira_finish");
			TryAnim$('talk');
		}
		// they have chosen a scroll, but haven't defeated baddy yet
		else
		{
			m_Go$.GetConversation.RSSelectConversation("kiira_1_shop");
			TryAnim$('talk');
		}
		
		m_Go$.GetConversation.RSActivateDialogue();
	}
}


////////////////////////////////////////////////////////////////////////////////
//	finish blabbing
state Exiting$
{
	event OnEnterState$
	{
		m_Job$.MarkForDeletion();
	}
}


